openapi: 3.0.1
info:
  title: Maku Supabase Action
  version: "0.1.0"
  description: |
    This OpenAPI schema defines a small API for Maku Travel.  It exposes
    endpoints to check a traveller's balance, top up their account and
    retrieve itineraries.  The API is designed to be used by ChatGPT
    through the Actions interface.
servers:
  - url: "http://localhost:3333"
    description: Local development server

paths:
  /healthz:
    get:
      summary: Health check
      description: Returns a simple status message to indicate the server is up.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ok

  /funds/balance:
    get:
      summary: Get account balance
      description: Retrieve the current balance for a given user.
      parameters:
        - name: user_id
          in: query
          required: true
          schema:
            type: string
          description: Unique identifier of the user whose balance is requested.
      responses:
        '200':
          description: Successful response containing the user ID and balance.
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: string
                    example: "user_123"
                  balance:
                    type: number
                    format: float
                    example: 150.5

  /funds/topup:
    post:
      summary: Top up account balance
      description: Increase the balance of a user by a specified amount.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TopupRequest'
      responses:
        '200':
          description: Balance updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: string
                  balance:
                    type: number
                    format: float
                required:
                  - user_id
                  - balance

  /itineraries/{user_id}:
    get:
      summary: List itineraries for a user
      description: Return all itinerary records associated with the specified user.
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: string
          description: Unique identifier of the user.
      responses:
        '200':
          description: A list of itineraries.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    user_id:
                      type: string
                    data:
                      type: object
                      additionalProperties: true

components:
  schemas:
    TopupRequest:
      type: object
      properties:
        user_id:
          type: string
          description: Unique identifier of the user.
        amount:
          type: number
          format: float
          description: Amount to add to the balance.
        description:
          type: string
          description: Optional description or reference for the topâ€‘up.
      required:
        - user_id
        - amount
