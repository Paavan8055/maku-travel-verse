/**
 * Professional Dream Customizer
 * Mix-and-match itinerary builder with real-time budget calculations
 * Mature, sophisticated UI for adult travelers
 */

import { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import {
  Check, X, Plus, Minus, Calendar, DollarSign, Users, MapPin,
  Star, Sparkles, ArrowRight, Info, TrendingUp, Wallet, Gift, Heart
} from 'lucide-react';
import { Card } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { Input } from '@/components/ui/input';
import { Slider } from '@/components/ui/slider';
import { useToast } from '@/hooks/use-toast';
import { DreamPackage } from '@/data/dreamLibrary';

interface DreamCustomizerProps {
  dream: DreamPackage;
}

const DreamCustomizer = ({ dream }: DreamCustomizerProps) => {
  const navigate = useNavigate();
  const { toast } = useToast();
  
  // Customization State
  const [selectedTier, setSelectedTier] = useState<'base' | 'premium' | 'luxury'>('base');
  const [selectedDays, setSelectedDays] = useState(dream.itinerary);
  const [selectedUpgrades, setSelectedUpgrades] = useState<string[]>([]);
  const [travelers, setTravelers] = useState(2);
  const [travelDates, setTravelDates] = useState({ start: '', end: '' });
  const [flexibleDates, setFlexibleDates] = useState(true);

  // Budget Calculations
  const baseCost = dream.budget[selectedTier];
  const upgradesCost = selectedUpgrades.reduce((sum, upgradeId) => {
    const upgrade = dream.upgrades.find(u => u.name === upgradeId);
    return sum + (upgrade?.price || 0);
  }, 0);
  const travelersMultiplier = travelers;
  const totalCost = (baseCost + upgradesCost) * travelersMultiplier;

  const handleCreateTravelFund = () => {
    const customizedDream = {
      ...dream,
      tier: selectedTier,
      selectedDays,
      upgrades: selectedUpgrades,
      travelers,
      dates: travelDates,
      flexible: flexibleDates,
      totalCost,
      customizedAt: new Date().toISOString()
    };

    sessionStorage.setItem('dreamToFund', JSON.stringify(customizedDream));

    toast({
      title: \"Dream Customized! \ud83c\udf89\",
      description: \"Setting up your Travel Fund Manager with $\" + totalCost.toLocaleString(),
    });

    navigate(`/travel-fund?dreamId=${dream.id}&amount=${totalCost}&source=smart-dream`);
  };

  return (\n    <div className=\"max-w-7xl mx-auto\">\n      {/* Header */}\n      <div className=\"mb-8\">\n        <div className=\"flex items-start justify-between\">\n          <div className=\"flex-1\">\n            <h1 className=\"text-3xl font-bold text-slate-900 mb-2\">{dream.title}</h1>\n            <p className=\"text-lg text-slate-600 mb-3\">{dream.tagline}</p>\n            <div className=\"flex items-center gap-4\">\n              <div className=\"flex items-center gap-2 text-sm text-slate-600\">\n                <MapPin className=\"w-4 h-4\" />\n                {dream.destination}, {dream.country}\n              </div>\n              <Badge variant=\"outline\">{dream.duration}</Badge>\n              <Badge variant=\"outline\">{dream.seasonality}</Badge>\n            </div>\n          </div>\n          \n          {/* Live Budget Summary */}\n          <Card className=\"p-6 w-80 sticky top-24\">\n            <h3 className=\"font-semibold mb-4 text-slate-900\">Your Customized Budget</h3>\n            <div className=\"space-y-3 mb-4 pb-4 border-b\">\n              <div className=\"flex justify-between text-sm\">\n                <span className=\"text-slate-600\">Base Package ({selectedTier})</span>\n                <span className=\"font-semibold\">${baseCost.toLocaleString()}</span>\n              </div>\n              {upgradesCost > 0 && (\n                <div className=\"flex justify-between text-sm\">\n                  <span className=\"text-slate-600\">Upgrades ({selectedUpgrades.length})</span>\n                  <span className=\"font-semibold\">${upgradesCost.toLocaleString()}</span>\n                </div>\n              )}\n              <div className=\"flex justify-between text-sm\">\n                <span className=\"text-slate-600\">Travelers</span>\n                <span className=\"font-semibold\">Ã— {travelers}</span>\n              </div>\n            </div>\n            <div className=\"flex justify-between items-center mb-4\">\n              <span className=\"font-semibold text-slate-900\">Total</span>\n              <span className=\"text-3xl font-bold text-purple-600\">${totalCost.toLocaleString()}</span>\n            </div>\n            <Button \n              className=\"w-full bg-gradient-to-r from-purple-600 to-rose-600 hover:from-purple-700 hover:to-rose-700\"\n              onClick={handleCreateTravelFund}\n              size=\"lg\"\n            >\n              <Wallet className=\"w-4 h-4 mr-2\" />\n              Create Travel Fund\n            </Button>\n            <p className=\"text-xs text-center text-slate-500 mt-3\">\n              Setup savings plan & get provider offers\n            </p>\n          </Card>\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n        {/* Main Content */}\n        <div className=\"lg:col-span-2 space-y-8\">\n          {/* Package Tier Selection */}\n          <Card className=\"p-6\">\n            <h2 className=\"text-xl font-semibold mb-4 text-slate-900\">Select Package Tier</h2>\n            <div className=\"grid grid-cols-3 gap-4\">\n              {(['base', 'premium', 'luxury'] as const).map((tier) => (\n                <button\n                  key={tier}\n                  onClick={() => setSelectedTier(tier)}\n                  className={`p-6 rounded-lg border-2 transition-all ${\n                    selectedTier === tier\n                      ? 'border-purple-600 bg-purple-50 shadow-lg'\n                      : 'border-slate-200 hover:border-slate-300'\n                  }`}\n                >\n                  <h3 className=\"font-semibold capitalize mb-2 text-slate-900\">{tier}</h3>\n                  <p className=\"text-2xl font-bold text-purple-600\">${dream.budget[tier].toLocaleString()}</p>\n                  <p className=\"text-xs text-slate-500 mt-1\">per person</p>\n                  {selectedTier === tier && (\n                    <Check className=\"w-5 h-5 text-purple-600 mx-auto mt-2\" />\n                  )}\n                </button>\n              ))}\n            </div>\n          </Card>\n\n          {/* Itinerary Customization */}\n          <Card className=\"p-6\">\n            <h2 className=\"text-xl font-semibold mb-4 text-slate-900\">Customize Itinerary</h2>\n            <p className=\"text-sm text-slate-600 mb-4\">Select which days to include in your journey</p>\n            <div className=\"space-y-3\">\n              {dream.itinerary.map((day, idx) => (\n                <div \n                  key={idx}\n                  className=\"flex items-start gap-4 p-4 rounded-lg border-2 border-slate-100 hover:border-purple-200 transition-colors\"\n                >\n                  <div className=\"flex-shrink-0\">\n                    <div className=\"w-8 h-8 rounded-full bg-purple-100 text-purple-700 flex items-center justify-center font-bold text-sm\">\n                      {day.day}\n                    </div>\n                  </div>\n                  <div className=\"flex-1\">\n                    <h4 className=\"font-semibold text-slate-900 mb-1\">{day.title}</h4>\n                    <div className=\"flex flex-wrap gap-2\">\n                      {day.activities.map((activity, i) => (\n                        <Badge key={i} variant=\"outline\" className=\"text-xs\">\n                          {activity}\n                        </Badge>\n                      ))}\n                    </div>\n                  </div>\n                  <Check className=\"w-5 h-5 text-green-600\" />\n                </div>\n              ))}\n            </div>\n          </Card>\n\n          {/* Hidden Gems */}\n          <Card className=\"p-6 bg-gradient-to-br from-amber-50 to-orange-50 border-amber-200\">\n            <div className=\"flex items-center gap-2 mb-4\">\n              <Star className=\"w-5 h-5 text-amber-600\" />\n              <h2 className=\"text-xl font-semibold text-slate-900\">Hidden Gems Included</h2>\n            </div>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              {dream.hiddenGems.map((gem, idx) => (\n                <div key={idx} className=\"p-4 bg-white rounded-lg border border-amber-200\">\n                  <div className=\"flex items-start justify-between mb-2\">\n                    <h4 className=\"font-semibold text-sm text-slate-900\">{gem.name}</h4>\n                    <Badge className=\"text-xs capitalize\">{gem.type}</Badge>\n                  </div>\n                  <p className=\"text-xs text-slate-600 mb-2\">{gem.description}</p>\n                  <p className=\"text-xs text-amber-700 font-medium\">\n                    \u2728 Must try: {gem.mustTry}\n                  </p>\n                </div>\n              ))}\n            </div>\n          </Card>\n\n          {/* Upgrades */}\n          <Card className=\"p-6\">\n            <h2 className=\"text-xl font-semibold mb-4 text-slate-900\">Optional Upgrades</h2>\n            <div className=\"space-y-3\">\n              {dream.upgrades.map((upgrade, idx) => (\n                <label\n                  key={idx}\n                  className={`flex items-start gap-4 p-4 rounded-lg border-2 cursor-pointer transition-all ${\n                    selectedUpgrades.includes(upgrade.name)\n                      ? 'border-purple-600 bg-purple-50'\n                      : 'border-slate-200 hover:border-slate-300'\n                  }`}\n                >\n                  <input\n                    type=\"checkbox\"\n                    checked={selectedUpgrades.includes(upgrade.name)}\n                    onChange={(e) => {\n                      if (e.target.checked) {\n                        setSelectedUpgrades([...selectedUpgrades, upgrade.name]);\n                      } else {\n                        setSelectedUpgrades(selectedUpgrades.filter(u => u !== upgrade.name));\n                      }\n                    }}\n                    className=\"mt-1\"\n                  />\n                  <div className=\"flex-1\">\n                    <div className=\"flex items-center justify-between mb-1\">\n                      <h4 className=\"font-semibold text-slate-900\">{upgrade.name}</h4>\n                      <span className=\"font-bold text-purple-600\">+${upgrade.price.toLocaleString()}</span>\n                    </div>\n                    <p className=\"text-sm text-slate-600\">{upgrade.description}</p>\n                  </div>\n                </label>\n              ))}\n            </div>\n          </Card>\n        </div>\n\n        {/* Sidebar - Travel Details */}\n        <div className=\"space-y-6\">\n          {/* Travelers */}\n          <Card className=\"p-6\">\n            <h3 className=\"font-semibold mb-4 text-slate-900\">Number of Travelers</h3>\n            <div className=\"flex items-center gap-4\">\n              <Button\n                variant=\"outline\"\n                size=\"icon\"\n                onClick={() => setTravelers(Math.max(1, travelers - 1))}\n              >\n                <Minus className=\"w-4 h-4\" />\n              </Button>\n              <div className=\"flex-1 text-center\">\n                <p className=\"text-3xl font-bold text-purple-600\">{travelers}</p>\n                <p className=\"text-xs text-slate-500\">travelers</p>\n              </div>\n              <Button\n                variant=\"outline\"\n                size=\"icon\"\n                onClick={() => setTravelers(travelers + 1)}\n              >\n                <Plus className=\"w-4 h-4\" />\n              </Button>\n            </div>\n          </Card>\n\n          {/* Travel Dates */}\n          <Card className=\"p-6\">\n            <h3 className=\"font-semibold mb-4 text-slate-900\">Travel Dates</h3>\n            <div className=\"space-y-3\">\n              <div>\n                <label className=\"text-xs text-slate-600 mb-1 block\">Departure</label>\n                <Input\n                  type=\"date\"\n                  value={travelDates.start}\n                  onChange={(e) => setTravelDates({...travelDates, start: e.target.value})}\n                />\n              </div>\n              <div>\n                <label className=\"text-xs text-slate-600 mb-1 block\">Return</label>\n                <Input\n                  type=\"date\"\n                  value={travelDates.end}\n                  onChange={(e) => setTravelDates({...travelDates, end: e.target.value})}\n                />\n              </div>\n              <label className=\"flex items-center gap-2\">\n                <input\n                  type=\"checkbox\"\n                  checked={flexibleDates}\n                  onChange={(e) => setFlexibleDates(e.target.checked)}\n                />\n                <span className=\"text-sm text-slate-700\">Flexible dates (better offers)</span>\n              </label>\n            </div>\n            {flexibleDates && (\n              <div className=\"mt-3 p-3 bg-green-50 rounded-lg border border-green-200\">\n                <p className=\"text-xs text-green-700\">\n                  \u2705 Flexible dates unlock off-season deals (up to 40% savings)\n                </p>\n              </div>\n            )}\n          </Card>\n\n          {/* Quick Actions */}\n          <Card className=\"p-6\">\n            <h3 className=\"font-semibold mb-4 text-slate-900\">Enhance Your Dream</h3>\n            <div className=\"space-y-2\">\n              <Button\n                variant=\"outline\"\n                className=\"w-full justify-start\"\n                onClick={() => navigate('/collaborative-planning')}\n              >\n                <Users className=\"w-4 h-4 mr-2\" />\n                Invite Friends to Plan\n              </Button>\n              <Button\n                variant=\"outline\"\n                className=\"w-full justify-start\"\n                onClick={() => navigate('/gift-cards')}\n              >\n                <Gift className=\"w-4 h-4 mr-2\" />\n                Enable Gift Contributions\n              </Button>\n            </div>\n          </Card>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DreamCustomizer;\n