const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/gamification-service-C5Buy_38-1758306666989.js","assets/index-B3Fp9pX--1758306666989.js","assets/index-Ooq3KkRQ-1758306666989.css"])))=>i.map(i=>d[i]);
var q=Object.defineProperty;var M=(i,e,t)=>e in i?q(i,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):i[e]=t;var S=(i,e,t)=>M(i,typeof e!="symbol"?e+"":e,t);import{s as h,l as d,h as R,i as $,r as o,_ as O}from"./index-B3Fp9pX--1758306666989.js";class Q{constructor(){S(this,"BEHAVIOR_BATCH_SIZE",10);S(this,"behaviorQueue",[])}async getEnhancedDestinations(e){try{const t=Date.now();let r=h.from("dream_destinations").select(`
          id, name, country, continent, category,
          description, best_time_to_visit, budget_range, avg_daily_cost,
          highlights
        `);e!=null&&e.category&&(r=r.eq("category",e.category)),e!=null&&e.continent&&(r=r.eq("continent",e.continent)),e!=null&&e.limit&&(r=r.limit(e.limit));const{data:l,error:u}=await r;if(u)throw u;const y=await this.enhanceDestinationsWithAIData(l||[]);let v;e!=null&&e.include_ai_context&&(e!=null&&e.user_id)&&(v=await this.getUserContext(e.user_id,y));const b=Date.now()-t;return{destinations:y,user_context:v,metadata:{total_count:y.length,ai_processing_time:b,personalization_enabled:!!v}}}catch(t){throw d.error("Error fetching enhanced destinations:",t),new Error("Failed to fetch enhanced destinations")}}async trackBehavior(e,t){const r={...t,timestamp:new Date};this.behaviorQueue.push(r),this.behaviorQueue.length>=this.BEHAVIOR_BATCH_SIZE&&await this.processBehaviorBatch(e),["bookmark","share","rate"].includes(t.signal_type)&&await this.storeBehaviorSignal(e,r)}async trackInteraction(e,t){const r={...t,timestamp:new Date};try{await h.from("user_interactions").insert({user_id:e,destination_id:r.destination_id,interaction_type:r.interaction_type,duration_seconds:r.duration_seconds,device_type:r.device_type,referrer:r.referrer,created_at:r.timestamp.toISOString()})}catch(l){d.error("Error tracking interaction:",l)}}async getUserProfile(e){try{const{data:t,error:r}=await h.from("user_dream_profiles").select("*").eq("user_id",e).single();if(r&&r.code!=="PGRST116")throw r;return t||await this.createUserProfile(e)}catch(t){return d.error("Error fetching user profile:",t),null}}async updateDreamCollection(e,t,r){try{r==="add"?await h.from("user_bookmarks").insert({user_id:e,destination_id:t,notes:"",priority:1}):await h.from("user_bookmarks").delete().eq("user_id",e).eq("destination_id",t),await this.trackBehavior(e,{signal_type:r==="add"?"bookmark":"view",value:r==="add"?1:-1,context:{destinationId:t,action:r}});const l=await this.checkAchievements(e);return await this.updateGameMetrics(e),{success:!0,achievementsUnlocked:l}}catch(l){return d.error("Error updating dream collection:",l),{success:!1}}}async getUserInsights(e){try{const t=await this.getUserProfile(e);return t?{travel_dna:t.travel_personality||{primary_type:"cultural_explorer",confidence_score:.75,personality_factors:[{factor:"culture",weight:.8,confidence:.9},{factor:"photography",weight:.6,confidence:.7}],last_analyzed:new Date},next_recommended_destinations:[],optimal_travel_windows:[],social_insights:{friends_overlap:[],trending_in_network:[]}}:null}catch(t){return d.error("Error getting user insights:",t),null}}async enhanceDestinationsWithAIData(e){return e.map(t=>({...t,latitude:t.latitude||0,longitude:t.longitude||0,personality_match_factors:[{factor:"culture",weight:.7,confidence:.8},{factor:"adventure",weight:.5,confidence:.6}],optimal_seasons:[{season:"spring",suitability_score:85,weather_description:"Perfect weather",crowd_level:"medium",price_level:"medium"}],crowd_patterns:[{month:6,crowd_level:70,local_events:[],tourist_density:"high"}],price_volatility:[{month:6,price_index:1.2,volatility:.15,booking_window_optimal:45}],rarity_score:t.rarity_score||Math.floor(Math.random()*100),social_popularity:t.social_popularity||0,user_generated_tags:t.user_generated_tags||[],community_rating:{overall_score:4.2,total_ratings:156,aspects:{photography:4.5,accessibility:3.8,value_for_money:4,uniqueness:4.7,local_culture:4.3}},conversion_rate:.15,engagement_score:.65,seasonal_interest:Array.from({length:12},()=>Math.random())}))}async getUserContext(e,t){return{personality_match_scores:t.reduce((r,l)=>(r[l.id]=Math.random()*100,r),{}),recommended_destinations:t.slice(0,5).map(r=>r.id),social_proof:{}}}async processBehaviorBatch(e){if(this.behaviorQueue.length!==0)try{const t=[...this.behaviorQueue];this.behaviorQueue=[],await h.from("user_behavior_signals").insert(t.map(r=>({user_id:e,signal_type:r.signal_type,value:r.value,context:r.context,created_at:r.timestamp.toISOString()})))}catch(t){d.error("Error processing behavior batch:",t)}}async storeBehaviorSignal(e,t){try{await h.from("user_behavior_signals").insert({user_id:e,signal_type:t.signal_type,value:t.value,context:t.context,created_at:t.timestamp.toISOString()})}catch(r){d.error("Error storing behavior signal:",r)}}async createUserProfile(e){const t={user_id:e,interaction_patterns:[],preference_weights:[],behavioral_signals:[],achievement_progress:[],social_connections:[],gamification_metrics:{total_points:0,level:1,destinations_collected:0,continents_unlocked:0,achievements_unlocked:0,streak_days:0,last_activity:new Date,rarity_score:0},created_at:new Date,last_updated:new Date,data_quality_score:.1};return await h.from("user_dream_profiles").insert(t),t}async checkAchievements(e){return[]}async updateGameMetrics(e){}}const f=new Q,G=(i={})=>{const{user:e}=R(),{toast:t}=$(),[r,l]=o.useState([]),[u,y]=o.useState(null),[v,b]=o.useState(null),[A,x]=o.useState(!0),[I,E]=o.useState(null),[w,C]=o.useState(!0),D=o.useCallback(async()=>{var a;try{x(!0),E(null);const n="https://maku-smart-dreams.preview.emergentagent.com";try{const s=new URLSearchParams;e!=null&&e.id&&s.append("user_id",e.id),i.limit&&s.append("limit",i.limit.toString()),i.category&&s.append("category",i.category),i.continent&&s.append("continent",i.continent),s.append("include_ai_context",(i.includeAIContext||!1).toString());const _=await fetch(`${n}/api/enhanced-dreams/destinations?${s}`);if(_.ok){const g=await _.json();if(g.destinations){l(g.destinations);return}}else throw new Error(`API returned ${_.status}: ${_.statusText}`)}catch(s){console.warn("Backend API error, falling back to service:",s),E(`API Error: ${s.message}`)}const c=await f.getEnhancedDestinations({user_id:e==null?void 0:e.id,limit:i.limit,category:i.category,continent:i.continent,include_ai_context:i.includeAIContext});l(c.destinations),c.user_context&&d.info("AI context loaded",{personalizedDestinations:(a=c.user_context.recommended_destinations)==null?void 0:a.length})}catch(n){const c=n instanceof Error?n.message:"Failed to fetch destinations";E(c),d.error("Error fetching enhanced destinations:",n)}finally{x(!1)}},[e==null?void 0:e.id,i.limit,i.category,i.continent,i.includeAIContext]),p=o.useCallback(async()=>{if(e!=null&&e.id)try{const[a,n]=await Promise.all([f.getUserProfile(e.id),f.getUserInsights(e.id)]);y(a),b(n)}catch(a){d.error("Error fetching user data:",a)}},[e==null?void 0:e.id]),m=o.useCallback(async(a,n,c={})=>{if(!(!(e!=null&&e.id)||!w))try{await f.trackBehavior(e.id,{signal_type:a,value:n,context:c})}catch(s){d.error("Error tracking behavior:",s)}},[e==null?void 0:e.id,w]),k=o.useCallback(async(a,n,c)=>{if(!(!(e!=null&&e.id)||!w))try{await f.trackInteraction(e.id,{destination_id:a,interaction_type:n,duration_seconds:c,device_type:/Mobile|Android|iPhone|iPad/.test(navigator.userAgent)?"mobile":"desktop",referrer:document.referrer})}catch(s){d.error("Error tracking interaction:",s)}},[e==null?void 0:e.id,w]),P=o.useCallback(async(a,n)=>{if(!(e!=null&&e.id))return t({title:"Authentication Required",description:"Please log in to manage your dream destinations.",variant:"destructive"}),{success:!1};try{const c=await f.updateDreamCollection(e.id,a,n);if(c.success){if(await k(a,n==="add"?"bookmark":"unbookmark"),n==="add")try{const{gamificationService:s}=await O(async()=>{const{gamificationService:g}=await import("./gamification-service-C5Buy_38-1758306666989.js");return{gamificationService:g}},__vite__mapDeps([0,1,2])),_=await s.checkAchievements(e.id,"destination_bookmarked",{destination_id:a,total_destinations:((u==null?void 0:u.gamification_metrics.destinations_collected)||0)+1});_.newly_unlocked.length>0&&_.newly_unlocked.forEach(g=>{t({title:"🏆 Achievement Unlocked!",description:`${g.name}: ${g.description}`,duration:5e3})}),_.points_earned>0&&t({title:"✨ Points Earned!",description:`You earned ${_.points_earned} points!`,duration:3e3}),_.level_up&&t({title:"🎉 Level Up!",description:`Welcome to Level ${_.level_up.new_level}!`,duration:6e3})}catch(s){console.warn("Gamification check failed:",s)}t({title:n==="add"?"Added to Dreams":"Removed from Dreams",description:n==="add"?"Destination added to your dream collection!":"Destination removed from your collection."}),await p()}else throw new Error("Failed to update dream collection");return c}catch(c){const s=c instanceof Error?c.message:"Failed to update collection";return t({title:"Error",description:s,variant:"destructive"}),{success:!1}}},[e==null?void 0:e.id,k,p,t,u]),U=o.useCallback(async(a,n)=>{await k(a.id,"view",n),await m("view",1,{destinationId:a.id,category:a.category,continent:a.continent,rarityScore:a.rarity_score})},[k,m]),B=o.useCallback(async a=>{await m("search",1,{query:a})},[m]),T=o.useCallback(async a=>{await m("filter",1,a)},[m]);return o.useEffect(()=>{D()},[D]),o.useEffect(()=>{e!=null&&e.id&&p()},[e==null?void 0:e.id,p]),{destinations:r,userProfile:u,userInsights:v,loading:A,error:I,updateDreamCollection:P,viewDestination:U,searchDestinations:B,filterDestinations:T,trackBehavior:m,trackInteraction:k,refetch:D,refreshUserData:p,setBehaviorTracking:C,behaviorTracking:w}};export{G as u};
