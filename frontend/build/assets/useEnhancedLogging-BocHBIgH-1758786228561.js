import{r as c,y as k,a7 as d}from"./index-BuFvfeSJ-1758786228561.js";import{c as _}from"./correlationId-D_3F8vgX-1758786228561.js";const x=()=>{const[e,t]=c.useState(!1),[i,l]=c.useState(null),{toast:u}=k(),n=c.useCallback(async(r,m,o)=>{try{t(!0);const{data:s}=await d.auth.getUser();if(!s.user)throw new Error("User not authenticated");const p=o||z(r,m),f={admin_user_id:s.user.id,command_text:p,command_type:"analysis",target_bots:E(r),command_parameters:{analysis_type:r,data:m,timestamp:new Date().toISOString(),priority:$(m)}},{data:v,error:b}=await d.from("admin_bot_commands").insert(f).select().single();if(b)throw b;const{data:B,error:w}=await d.functions.invoke("master-bot-controller",{body:{command_id:v.id,command_text:f.command_text,command_type:f.command_type,target_bots:f.target_bots,parameters:f.command_parameters}});if(w)throw w;await new Promise(I=>setTimeout(I,1e3));const{data:y,error:C}=await d.from("bot_result_aggregation").select("*").eq("correlation_id",v.id).order("created_at",{ascending:!1}).limit(1);if(C||!(y!=null&&y.length))throw new Error("No AI analysis results available");const A=y[0],h=S(A);return l(h),u({title:"AI Analysis Complete",description:`Master Bot provided ${h.recommendations.length} recommendations`,variant:"default"}),h}catch(s){return console.error("Master Bot analysis failed:",s),u({title:"Analysis Failed",description:s.message||"Failed to get AI analysis",variant:"destructive"}),null}finally{t(!1)}},[u]),a=c.useCallback(async(r="admin",m=20)=>{try{const{data:o,error:s}=await d.from("bot_result_aggregation").select("*").or(`target_dashboard.eq.${r},target_dashboard.eq.all`).order("created_at",{ascending:!1}).limit(m);if(s)throw s;return o||[]}catch(o){return console.error("Error fetching bot results:",o),[]}},[]),g=c.useCallback((r,m)=>{const o=d.channel(`bot-results-${r}`).on("postgres_changes",{event:"INSERT",schema:"public",table:"bot_result_aggregation",filter:`target_dashboard=eq.${r}`},s=>{m(s.new)}).subscribe();return()=>{d.removeChannel(o)}},[]);return{isAnalyzing:e,latestAnalysis:i,requestAnalysis:n,fetchLatestBotResults:a,subscribeToRealTimeResults:g,setLatestAnalysis:l}};function z(e,t){switch(e){case"provider_diagnostics":return`Analyze provider test results: ${t.length||0} tests with detailed performance metrics. Provide comprehensive health assessment, identify bottlenecks, and generate actionable optimization recommendations.`;case"system_health":return"Evaluate overall system health across all components. Review performance metrics, error rates, and user experience indicators. Provide strategic recommendations for system optimization.";case"performance":return"Conduct detailed performance analysis of booking flow, provider response times, and user journey optimization. Identify performance bottlenecks and recommend improvements.";default:return"Analyze system data and provide comprehensive insights with actionable recommendations."}}function E(e){switch(e){case"provider_diagnostics":return["provider-health-analyzer","system-optimizer"];case"system_health":return["system-monitor","performance-analyzer"];case"performance":return["performance-optimizer","user-experience-analyzer"];default:return["general-analyzer"]}}function $(e){if(Array.isArray(e)){const i=e.filter(l=>!l.success).length/e.length;if(i>=1)return"critical";if(i>.5)return"high";if(i>.2)return"medium"}return"low"}function S(e){const t=e.result_data;return{summary:t.summary||"AI analysis completed",recommendations:t.recommendations||t.optimization_suggestions||[],actionItems:t.action_items||t.actionItems||[],severity:q(t,e.confidence_score),metrics:t.metrics||{},rawBotResult:e}}function q(e,t){var i,l,u;return e.severity?e.severity:t<.5?"low":((i=e.metrics)==null?void 0:i.failure_rate)>.8?"critical":((l=e.metrics)==null?void 0:l.failure_rate)>.5?"high":((u=e.metrics)==null?void 0:u.failure_rate)>.2?"medium":"low"}const D=()=>{const e=c.useCallback(async n=>{try{const{error:a}=await d.functions.invoke("enhanced-logging",{body:{logs:n},headers:{"X-Correlation-ID":_.getCurrentId()}});a&&console.error("Enhanced logging failed:",a)}catch(a){console.error("Enhanced logging error:",a)}},[]),t=c.useCallback(async n=>{await e([n])},[e]),i=c.useCallback(async(n,a,g,r,m,o,s)=>{const p=Date.now()-g;await t({service_name:n,log_level:r?"info":"error",message:`${a} ${r?"completed":"failed"}`,duration_ms:p,status_code:m,error_details:o?{message:o.message,stack:o.stack}:void 0,metadata:s,request_id:_.getCurrentId()})},[t]),l=c.useCallback(async(n,a,g)=>{await t({service_name:"frontend_performance",log_level:"info",message:`Performance metric: ${n}`,duration_ms:a,metadata:g,request_id:_.getCurrentId()})},[t]),u=c.useCallback(async(n,a,g="warn",r)=>{await t({service_name:"security",log_level:g,message:`Security event: ${n} - ${a}`,metadata:r,request_id:_.getCurrentId()})},[t]);return{logBatch:e,logSingle:t,logApiCall:i,logPerformance:l,logSecurityEvent:u}};export{D as a,x as u};
