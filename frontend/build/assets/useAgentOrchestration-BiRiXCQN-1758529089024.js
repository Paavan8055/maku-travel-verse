var A=Object.defineProperty;var T=(n,e,t)=>e in n?A(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t;var d=(n,e,t)=>T(n,typeof e!="symbol"?e+"":e,t);import{s as g,r as p,i as I}from"./index-CCJXHVND-1758529089024.js";import{o as k,e as S,s as m,n as w}from"./types-BekIk3NQ-1758529089024.js";class M{constructor(){d(this,"tools",new Map);d(this,"metrics",new Map);d(this,"categories",new Map)}register(e){this.tools.set(e.definition.name,e),this.metrics.set(e.definition.name,{toolName:e.definition.name,executionCount:0,averageExecutionTime:0,successRate:1,lastExecuted:new Date,errorCounts:{}});const t=e.definition.category||"general";this.categories.has(t)||this.categories.set(t,[]),this.categories.get(t).push(e.definition.name)}unregister(e){return this.tools.delete(e)}get(e){return this.tools.get(e)}getByCategory(e){return(this.categories.get(e)||[]).map(s=>this.tools.get(s)).filter(Boolean)}getAllDefinitions(){return Array.from(this.tools.values()).map(e=>e.definition)}getAvailableTools(e){return this.getAllDefinitions()}updateMetrics(e,t,s,i){const a=this.metrics.get(e);a&&(a.executionCount++,a.averageExecutionTime=(a.averageExecutionTime*(a.executionCount-1)+t)/a.executionCount,a.successRate=(a.successRate*(a.executionCount-1)+(s?1:0))/a.executionCount,a.lastExecuted=new Date,!s&&i&&(a.errorCounts[i]=(a.errorCounts[i]||0)+1))}getMetrics(e){return e?this.metrics.get(e)||this.createEmptyMetrics(e):Array.from(this.metrics.values())}createEmptyMetrics(e){return{toolName:e,executionCount:0,averageExecutionTime:0,successRate:0,lastExecuted:new Date(0),errorCounts:{}}}getOpenAITools(){return this.getAllDefinitions().map(e=>({type:"function",function:{name:e.name,description:e.description,parameters:e.parameters}}))}}const h=new M;class x{constructor(){d(this,"maxRetries",3);d(this,"retryDelay",1e3)}async execute(e,t,s){const i=Date.now(),a=h.get(e.function.name);if(!a){const c={id:e.id,success:!1,result:null,error:`Tool '${e.function.name}' not found`,executionTime:Date.now()-i};return this.logExecution(e,c,t),c}let r;try{r=JSON.parse(e.function.arguments)}catch(c){const u={id:e.id,success:!1,result:null,error:`Invalid parameters: ${c.message}`,executionTime:Date.now()-i};return this.logExecution(e,u,t),u}if(a.validate&&!a.validate(r)){const c={id:e.id,success:!1,result:null,error:"Parameter validation failed",executionTime:Date.now()-i};return this.logExecution(e,c,t),c}let o;for(let c=0;c<this.maxRetries;c++)try{const u=await a.execute(r,{...t,standardizedContext:s,attempt:c+1});return u.executionTime=Date.now()-i,s&&s.addToolResult(e.id,u.result,u.success,u.error),this.logExecution(e,u,t),h.updateMetrics(e.function.name,u.executionTime,u.success,u.error),u}catch(u){o=u,c<this.maxRetries-1&&await this.delay(this.retryDelay*Math.pow(2,c))}const l={id:e.id,success:!1,result:null,error:`Tool execution failed after ${this.maxRetries} attempts: ${(o==null?void 0:o.message)||"Unknown error"}`,executionTime:Date.now()-i};return this.logExecution(e,l,t),h.updateMetrics(e.function.name,l.executionTime,!1,l.error),l}async executeMultiple(e,t,s){const i=e.map(a=>this.execute(a,t,s));return Promise.all(i)}logExecution(e,t,s){console.log(`Tool Execution: ${e.function.name}`,{toolCallId:e.id,agentId:s.agentId,success:t.success,executionTime:t.executionTime,error:t.error})}delay(e){return new Promise(t=>setTimeout(t,e))}async executeBatch(e,t,s){const i=[],a=[...e];for(;a.length>0;){const r=[],o=[];for(const c of a){const u=h.get(c.function.name);!u||!u.definition.dependencies||u.definition.dependencies.length===0||u.definition.dependencies.every(D=>i.some(b=>{var v;return b.success&&((v=e.find(_=>_.id===b.id))==null?void 0:v.function.name)===D}))?r.push(c):o.push(c)}if(r.length===0)throw new Error("Circular dependency detected or missing required tools");const l=await this.executeMultiple(r,t,s);i.push(...l),a.splice(0,a.length,...o)}return i}}class ${constructor(e,t){d(this,"executor");d(this,"definition");d(this,"executionHistory",[]);this.definition=e,this.executor=t||new x}async execute(e,t,s){const i=[];this.executionHistory=[];try{for(let a=0;a<this.definition.steps.length;a++){const r=this.definition.steps[a];if(r.condition&&!r.condition(i)){console.log(`Skipping step ${a+1}: condition not met`);continue}let o=r.parameters;if(r.mapPreviousResult&&i.length>0){const u=r.mapPreviousResult(i);o={...o,...u}}(a===0||!r.mapPreviousResult)&&(o={...e,...o});const l={id:`chain_${this.definition.id}_step_${a+1}`,type:"function",function:{name:r.toolName,arguments:JSON.stringify(o)}},c=await this.executor.execute(l,t,s);if(i.push(c),this.executionHistory.push([c]),!c.success&&this.definition.rollbackOnFailure)throw await this.rollback(t,s),new Error(`Chain execution failed at step ${a+1}: ${c.error}`);s&&s.setSharedData(`chain_${this.definition.id}_progress`,{currentStep:a+1,totalSteps:this.definition.steps.length,completed:(a+1)/this.definition.steps.length,results:i.map(u=>({success:u.success,error:u.error}))})}return i}catch(a){throw this.definition.rollbackOnFailure&&await this.rollback(t,s),a}}async rollback(e,t){console.log(`Rolling back chain ${this.definition.id}`),t&&t.setSharedData(`chain_${this.definition.id}_rollback`,{timestamp:new Date().toISOString(),steps_rolled_back:this.executionHistory.length})}getProgress(){return{current:this.executionHistory.length,total:this.definition.steps.length,percentage:this.executionHistory.length/this.definition.steps.length*100}}getResults(){return this.executionHistory.flat()}}class C{constructor(){d(this,"chains",new Map)}register(e){this.chains.set(e.id,e)}get(e){return this.chains.get(e)}createChain(e,t){const s=this.get(e);return s?new $(s,t):null}getAllChains(){return Array.from(this.chains.values())}}const f=new C,P={definition:{name:"search_flights",description:"Search for flight options between two destinations",parameters:{type:"object",properties:{origin:{type:"string",description:"Origin airport code (IATA)"},destination:{type:"string",description:"Destination airport code (IATA)"},departureDate:{type:"string",description:"Departure date in ISO format (YYYY-MM-DD)"},returnDate:{type:"string",description:"Return date in ISO format (YYYY-MM-DD), optional for one-way"},passengers:{type:"object",description:"Passenger counts",properties:{adults:{type:"number",description:"Number of adults"},children:{type:"number",description:"Number of children"},infants:{type:"number",description:"Number of infants"}}},cabin:{type:"string",description:"Cabin class preference",enum:["economy","premium_economy","business","first"]}},required:["origin","destination","departureDate","passengers"]},category:"travel"},schema:k({origin:m().length(3),destination:m().length(3),departureDate:m(),returnDate:m().optional(),passengers:k({adults:w().min(1),children:w().min(0),infants:w().min(0)}),cabin:S(["economy","premium_economy","business","first"]).optional()}),async execute(n,e){var t;try{const{data:s,error:i}=await g.functions.invoke("unified-search",{body:{type:"flight",query:{origin:n.origin,destination:n.destination,departureDate:n.departureDate,returnDate:n.returnDate,adults:n.passengers.adults,children:n.passengers.children||0,infants:n.passengers.infants||0,cabin:n.cabin||"economy"}}});if(i)throw i;return{id:(e==null?void 0:e.toolCallId)||crypto.randomUUID(),success:!0,result:{flights:s.flights||[],searchId:s.searchId,totalResults:((t=s.flights)==null?void 0:t.length)||0}}}catch(s){return{id:(e==null?void 0:e.toolCallId)||crypto.randomUUID(),success:!1,result:null,error:`Flight search failed: ${s.message}`}}}},R={definition:{name:"search_hotels",description:"Search for hotel accommodations in a destination",parameters:{type:"object",properties:{destination:{type:"string",description:"Destination city or hotel name"},checkIn:{type:"string",description:"Check-in date in ISO format (YYYY-MM-DD)"},checkOut:{type:"string",description:"Check-out date in ISO format (YYYY-MM-DD)"},guests:{type:"object",description:"Guest information",properties:{adults:{type:"number",description:"Number of adults"},children:{type:"number",description:"Number of children"},rooms:{type:"number",description:"Number of rooms"}}},filters:{type:"object",description:"Search filters",properties:{minPrice:{type:"number",description:"Minimum price per night"},maxPrice:{type:"number",description:"Maximum price per night"},stars:{type:"array",description:"Hotel star ratings"},amenities:{type:"array",description:"Required amenities"}}}},required:["destination","checkIn","checkOut","guests"]},category:"travel"},async execute(n,e){var t;try{const{data:s,error:i}=await g.functions.invoke("unified-search",{body:{type:"hotel",query:{destination:n.destination,checkIn:n.checkIn,checkOut:n.checkOut,adults:n.guests.adults,children:n.guests.children||0,rooms:n.guests.rooms||1,...n.filters}}});if(i)throw i;return{id:(e==null?void 0:e.toolCallId)||crypto.randomUUID(),success:!0,result:{hotels:s.hotels||[],searchId:s.searchId,totalResults:((t=s.hotels)==null?void 0:t.length)||0}}}catch(s){return{id:(e==null?void 0:e.toolCallId)||crypto.randomUUID(),success:!1,result:null,error:`Hotel search failed: ${s.message}`}}}},E={definition:{name:"get_booking_status",description:"Get the current status of a booking",parameters:{type:"object",properties:{bookingReference:{type:"string",description:"Booking reference number"},bookingType:{type:"string",description:"Type of booking",enum:["flight","hotel","activity","transfer"]}},required:["bookingReference"]},category:"booking"},async execute(n,e){try{const{data:t,error:s}=await g.from("bookings").select(`
          id,
          booking_reference,
          status,
          booking_type,
          total_amount,
          currency,
          booking_data,
          created_at,
          updated_at
        `).eq("booking_reference",n.bookingReference).single();if(s)throw s;return{id:(e==null?void 0:e.toolCallId)||crypto.randomUUID(),success:!0,result:{booking:t,status:t.status,reference:t.booking_reference}}}catch(t){return{id:(e==null?void 0:e.toolCallId)||crypto.randomUUID(),success:!1,result:null,error:`Failed to get booking status: ${t.message}`}}}},N={definition:{name:"search_activities",description:"Search for activities and experiences in a destination",parameters:{type:"object",properties:{destination:{type:"string",description:"Destination city or location"},dateFrom:{type:"string",description:"Start date for activities (YYYY-MM-DD)"},dateTo:{type:"string",description:"End date for activities (YYYY-MM-DD)"},category:{type:"string",description:"Activity category",enum:["cultural","adventure","nature","food","entertainment","sports"]},participants:{type:"number",description:"Number of participants"}},required:["destination","dateFrom"]},category:"travel"},async execute(n,e){var t;try{const{data:s,error:i}=await g.functions.invoke("unified-search",{body:{type:"activity",query:{destination:n.destination,dateFrom:n.dateFrom,dateTo:n.dateTo,category:n.category,participants:n.participants||1}}});if(i)throw i;return{id:(e==null?void 0:e.toolCallId)||crypto.randomUUID(),success:!0,result:{activities:s.activities||[],searchId:s.searchId,totalResults:((t=s.activities)==null?void 0:t.length)||0}}}catch(s){return{id:(e==null?void 0:e.toolCallId)||crypto.randomUUID(),success:!1,result:null,error:`Activity search failed: ${s.message}`}}}};h.register(P);h.register(R);h.register(E);h.register(N);const U={id:"travel_planning",name:"Complete Travel Planning",description:"Search flights, hotels, and activities for a complete trip",steps:[{toolName:"search_flights",parameters:{},mapPreviousResult:()=>({})},{toolName:"search_hotels",parameters:{},condition:n=>n.length>0&&n[0].success,mapPreviousResult:n=>{var t;const e=n[0];if(e.success&&((t=e.result.flights)==null?void 0:t.length)>0){const s=e.result.flights[0];return{destination:s.destination,checkIn:s.departureDate,checkOut:s.returnDate||s.departureDate}}return{}}},{toolName:"search_activities",parameters:{},condition:n=>n.length>1&&n[1].success,mapPreviousResult:n=>{var t;const e=n[1];return e.success&&((t=e.result.hotels)==null?void 0:t.length)>0?{destination:e.result.hotels[0].location,dateFrom:e.result.hotels[0].checkIn,dateTo:e.result.hotels[0].checkOut}:{}}}]};f.register(U);function O(){console.log("Tool system initialized with:",{tools:h.getAllDefinitions().length,chains:f.getAllChains().length})}O();class W{constructor(e,t,s){d(this,"supabase");d(this,"agentId");d(this,"context");this.supabase=e,this.agentId=t,this.context=s}async logActivity(e,t,s={}){try{await this.supabase.from("user_activity_logs").insert({user_id:e,activity_type:t,item_type:"agent_action",item_id:this.agentId,item_data:s,session_id:crypto.randomUUID()})}catch(i){console.error("Failed to log activity:",i)}}}class Y extends W{constructor(t,s,i){super(t,s,i);d(this,"toolExecutor");this.toolExecutor=new x}async executeToolsWithContext(t,s,i){var o,l;const a={userId:s,agentId:this.agentId,conversationId:((o=this.context)==null?void 0:o.getState().conversationId)||crypto.randomUUID(),sessionId:crypto.randomUUID(),metadata:i},r=await this.toolExecutor.executeMultiple(t,a,this.context);for(const c of r)await this.logActivity(s||"system","tool_execution",{toolName:(l=t.find(u=>u.id===c.id))==null?void 0:l.function.name,success:c.success,executionTime:c.executionTime,error:c.error});return r}async executeWorkflow(t,s,i){var l;const a=f.createChain(t,this.toolExecutor);if(!a)throw new Error(`Workflow '${t}' not found`);const r={userId:i,agentId:this.agentId,conversationId:((l=this.context)==null?void 0:l.getState().conversationId)||crypto.randomUUID(),sessionId:crypto.randomUUID()},o=await a.execute(s,r,this.context);return await this.logActivity(i||"system","workflow_execution",{chainId:t,success:o.every(c=>c.success),totalSteps:o.length,failedSteps:o.filter(c=>!c.success).length}),o}async getCapabilities(){const t=h.getAvailableTools(this.agentId),s=f.getAllChains(),i=h.getMetrics();return{tools:t.map(a=>({name:a.name,description:a.description,category:a.category,parameters:a.parameters})),workflows:s.map(a=>({id:a.id,name:a.name,description:a.description,stepCount:a.steps.length})),metrics:Array.isArray(i)?i:[i]}}async recommendTools(t,s){h.getAllDefinitions();const i=[],a=t.toLowerCase();return(a.includes("flight")||a.includes("fly"))&&i.push("search_flights"),(a.includes("hotel")||a.includes("accommodation"))&&i.push("search_hotels"),(a.includes("activity")||a.includes("experience"))&&i.push("search_activities"),(a.includes("booking")||a.includes("reservation"))&&i.push("get_booking_status"),(s==null?void 0:s.travelType)==="business"&&i.push("search_flights"),i}async validateToolCall(t){const s=h.get(t.function.name);if(!s)return{valid:!1,errors:[`Tool '${t.function.name}' not found`]};try{const i=JSON.parse(t.function.arguments);if(s.schema){const a=s.schema.safeParse(i);if(!a.success)return{valid:!1,errors:a.error.errors.map(r=>`${r.path.join(".")}: ${r.message}`)}}return s.validate&&!s.validate(i)?{valid:!1,errors:["Custom validation failed"]}:{valid:!0,errors:[]}}catch(i){return{valid:!1,errors:[`Invalid JSON parameters: ${i.message}`]}}}}class y{constructor(e,t,s,i){d(this,"state");d(this,"supabase");d(this,"isDirty",!1);this.supabase=s,this.state={conversationId:e,agentId:t,sessionId:crypto.randomUUID(),messages:[],sharedData:{},agentContext:{},userProfile:{},metadata:{createdAt:new Date,updatedAt:new Date,version:1},...i}}addMessage(e){const t=crypto.randomUUID(),s={id:t,timestamp:new Date,...e};return this.state.messages.push(s),this.markDirty(),t}addUserMessage(e,t){return this.addMessage({role:"user",content:e,metadata:t})}addAssistantMessage(e,t,s){return this.addMessage({role:"assistant",content:e,toolCalls:t,metadata:s})}addToolResult(e,t,s=!0,i){const a={id:crypto.randomUUID(),toolCallId:e,result:t,success:s,error:i};return this.addMessage({role:"tool",content:s?JSON.stringify(t):`Error: ${i}`,toolResults:[a]})}getMessages(){return[...this.state.messages]}getMessagesForLLM(){return this.state.messages.map(e=>({role:e.role,content:e.content}))}setSharedData(e,t){this.state.sharedData[e]=t,this.markDirty()}getSharedData(e){return this.state.sharedData[e]}setAgentContext(e,t){this.state.agentContext[e]=t,this.markDirty()}getAgentContext(e){return this.state.agentContext[e]}setUserProfile(e){this.state.userProfile={...this.state.userProfile,...e},this.markDirty()}getUserProfile(){return{...this.state.userProfile}}setCurrentTask(e){this.state.currentTask=e,this.markDirty()}getCurrentTask(){return this.state.currentTask}updateTaskProgress(e,t){this.state.currentTask&&(this.state.currentTask.progress=e,t&&(this.state.currentTask.status=t),this.markDirty())}setTravelContext(e){this.state.travelContext={...this.state.travelContext,...e},this.markDirty()}getTravelContext(){return this.state.travelContext||{}}async shareContext(e,t){const s=t?Object.fromEntries(t.map(i=>[i,this.state.sharedData[i]])):this.state.sharedData;await this.supabase.from("agent_context_memory").upsert({agent_id:e,user_id:this.state.userId,session_id:this.state.sessionId,context_type:"shared_handoff",context_data:{sourceAgentId:this.state.agentId,sharedContext:s,handoffTimestamp:new Date().toISOString(),conversationId:this.state.conversationId}})}async receiveSharedContext(e){const{data:t}=await this.supabase.from("agent_context_memory").select("context_data").eq("agent_id",this.state.agentId).eq("user_id",this.state.userId).eq("context_type","shared_handoff").order("created_at",{ascending:!1}).limit(1);if(t&&t[0]){const{sharedContext:s}=t[0].context_data;this.state.sharedData={...this.state.sharedData,...s},this.markDirty()}}markDirty(){this.isDirty=!0,this.state.metadata.updatedAt=new Date,this.state.metadata.version++}async save(){var e;this.isDirty&&(await this.supabase.from("agent_context_memory").upsert({agent_id:this.state.agentId,user_id:this.state.userId,session_id:this.state.sessionId,context_type:"conversation_state",context_data:this.state,expires_at:(e=this.state.metadata.expiresAt)==null?void 0:e.toISOString()}),this.isDirty=!1)}async load(){const{data:e}=await this.supabase.from("agent_context_memory").select("context_data").eq("agent_id",this.state.agentId).eq("user_id",this.state.userId).eq("session_id",this.state.sessionId).eq("context_type","conversation_state").order("created_at",{ascending:!1}).limit(1);return e&&e[0]?(this.state={...e[0].context_data,metadata:{...e[0].context_data.metadata,createdAt:new Date(e[0].context_data.metadata.createdAt),updatedAt:new Date(e[0].context_data.metadata.updatedAt),expiresAt:e[0].context_data.metadata.expiresAt?new Date(e[0].context_data.metadata.expiresAt):void 0}},this.isDirty=!1,!0):!1}serialize(){return JSON.stringify(this.state)}static deserialize(e,t){const s=JSON.parse(e);return new y(s.conversationId,s.agentId,t,s)}getState(){return Object.freeze({...this.state})}clone(){return new y(this.state.conversationId,this.state.agentId,this.supabase,JSON.parse(JSON.stringify(this.state)))}}class q{constructor(){d(this,"agents",new Map);d(this,"agentMetadata",new Map);d(this,"messageQueue",[]);d(this,"taskDelegations",new Map);d(this,"contexts",new Map);this.startMessageProcessor()}async createAgent(e,t,s,i){const a=`${e}-${Date.now()}-${Math.random().toString(36).substr(2,9)}`,r=new y(`conv-${a}`,a,g,{sessionId:s,userId:i});await r.load(),this.contexts.set(a,r);const o=new Y(g,a,r);this.agents.set(a,o);const l={id:a,type:e,specialization:t,capabilities:this.getCapabilitiesByType(e),workload:0,status:"active",createdAt:new Date,lastActivity:new Date};return this.agentMetadata.set(a,l),await o.logActivity(i||"system",`Agent ${a} created with type ${e}`,{specialization:t,capabilities:l.capabilities}),o}async terminateAgent(e){const t=this.agentMetadata.get(e);if(!t)return;const s=this.contexts.get(e);s&&await s.save(),t.status="terminated",this.agentMetadata.set(e,t),this.agents.delete(e),this.contexts.delete(e)}async pauseAgent(e){const t=this.agentMetadata.get(e);t&&(t.status="paused",this.agentMetadata.set(e,t))}async resumeAgent(e){const t=this.agentMetadata.get(e);t&&t.status==="paused"&&(t.status="active",t.lastActivity=new Date,this.agentMetadata.set(e,t))}async sendMessage(e){const t={...e,id:`msg-${Date.now()}-${Math.random().toString(36).substr(2,9)}`,timestamp:new Date};this.messageQueue.push(t),await this.processMessage(t)}async delegateTask(e){const t=`task-${Date.now()}-${Math.random().toString(36).substr(2,9)}`,s={...e,id:t,status:"pending"};return this.taskDelegations.set(t,s),await this.sendMessage({fromAgentId:e.delegatedBy,toAgentId:e.assignedTo,messageType:"task-delegation",payload:s,priority:e.priority>2?"high":"normal",sessionId:""}),t}async handoffToSpecialist(e,t,s,i){const a=this.findBestSpecialist(t);if(!a)return null;const r=this.contexts.get(e),o=this.contexts.get(a.id);return r&&o&&await this.transferContext(r,o,s),await this.sendMessage({fromAgentId:e,toAgentId:a.id,messageType:"handoff",payload:{context:s,specialization:t},priority:"normal",sessionId:i}),a.id}findBestSpecialist(e){return Array.from(this.agentMetadata.values()).filter(s=>s.status==="active"&&s.specialization.includes(e)).sort((s,i)=>s.workload-i.workload)[0]||null}getAvailableAgents(){return Array.from(this.agentMetadata.values()).filter(e=>e.status==="active")}getAgentsByType(e){return Array.from(this.agentMetadata.values()).filter(t=>t.type===e&&t.status==="active")}getSystemMetrics(){const e=Array.from(this.agentMetadata.values()),t=e.filter(r=>r.status==="active"),s=e.filter(r=>r.status==="busy"),i=e.reduce((r,o)=>r+o.workload,0),a=e.length>0?i/e.length:0;return{totalAgents:e.length,activeAgents:t.length,busyAgents:s.length,averageWorkload:a,queuedMessages:this.messageQueue.length,activeTasks:Array.from(this.taskDelegations.values()).filter(r=>r.status==="in-progress").length}}async processMessage(e){const t=this.agents.get(e.toAgentId);if(!t)return;const s=this.agentMetadata.get(e.toAgentId);if(!(!s||s.status!=="active"))try{switch(e.messageType){case"task-delegation":await this.handleTaskDelegation(t,e);break;case"handoff":await this.handleHandoff(t,e);break;case"data-sharing":await this.handleDataSharing(t,e);break;case"status-update":await this.handleStatusUpdate(t,e);break}s&&(s.lastActivity=new Date,this.agentMetadata.set(e.toAgentId,s))}catch(i){console.error(`Error processing message ${e.id}:`,i)}}async handleTaskDelegation(e,t){const s=t.payload;s.status="in-progress",this.taskDelegations.set(s.id,s);try{const i=await e.executeToolsWithContext([{id:`tool-${Date.now()}`,type:"function",function:{name:s.taskType,arguments:JSON.stringify(s.parameters)}}],s.delegatedBy);s.status="completed",s.result=i}catch(i){s.status="failed",s.error=i instanceof Error?i.message:"Unknown error"}this.taskDelegations.set(s.id,s)}async handleHandoff(e,t){const s=t.payload;await e.logActivity("system",`Received handoff from ${t.fromAgentId}`,s)}async handleDataSharing(e,t){const s=this.contexts.get(t.toAgentId);s&&(s.setSharedData(`shared_${t.fromAgentId}`,t.payload),await s.save())}async handleStatusUpdate(e,t){await e.logActivity("system",`Status update from ${t.fromAgentId}`,t.payload)}async transferContext(e,t,s){t.setSharedData("handoff_context",{from:e.getState().agentId,data:s,timestamp:new Date().toISOString()}),await t.save()}getCapabilitiesByType(e){return{"travel-expert":["destination-research","itinerary-planning","travel-advice","cultural-insights"],"booking-specialist":["flight-booking","hotel-booking","activity-booking","package-deals"],"payment-handler":["payment-processing","refunds","billing-support","fraud-detection"],"customer-service":["support-chat","issue-resolution","feedback-collection","escalation"],general:["basic-chat","information-lookup","task-routing"]}[e]||["basic-operations"]}startMessageProcessor(){setInterval(()=>{if(this.messageQueue.length>0){const e=this.messageQueue.shift();e&&this.processMessage(e).catch(console.error)}},100)}}class H{constructor(){d(this,"templates",new Map);d(this,"executions",new Map);d(this,"agents",new Map);this.initializeDefaultTemplates()}registerTemplate(e){this.templates.set(e.id,e)}getTemplate(e){return this.templates.get(e)}getAllTemplates(){return Array.from(this.templates.values())}getTemplatesByCategory(e){return Array.from(this.templates.values()).filter(t=>t.category===e)}async executeWorkflow(e,t,s){if(!this.templates.get(e))throw new Error(`Workflow template ${e} not found`);const a=`exec-${Date.now()}-${Math.random().toString(36).substr(2,9)}`,r={id:a,templateId:e,status:"pending",currentStep:0,parallelTasks:new Map,startedAt:new Date,results:{},context:{...t},assignedAgents:s,errorHistory:[]};return this.executions.set(a,r),this.runWorkflow(a).catch(o=>{console.error(`Workflow ${a} failed:`,o),r.status="failed",r.completedAt=new Date}),a}async pauseWorkflow(e){const t=this.executions.get(e);t&&t.status==="running"&&(t.status="paused")}async resumeWorkflow(e){const t=this.executions.get(e);t&&t.status==="paused"&&(t.status="running",await this.runWorkflow(e))}async cancelWorkflow(e){const t=this.executions.get(e);t&&["pending","running","paused"].includes(t.status)&&(await this.rollbackWorkflow(e),t.status="rolled-back",t.completedAt=new Date)}getExecution(e){return this.executions.get(e)}async runWorkflow(e){var i,a;const t=this.executions.get(e),s=t?this.templates.get(t.templateId):void 0;if(!(!t||!s)){t.status="running";try{for(let r=t.currentStep;r<s.steps.length&&t.status==="running";r++){const o=s.steps[r];if(t.currentStep=r,o.condition&&!await this.evaluateCondition(o.condition,t.context)){(i=o.branches)!=null&&i.false&&await this.executeSteps(o.branches.false,t);continue}const l=((a=o.branches)==null?void 0:a.true)||[o];await this.executeSteps(l,t);const c=s.parallelExecutions.find(u=>u.syncPoint===o.id);c&&await this.executeParallelSteps(c,t)}t.status==="running"&&(t.status="completed",t.completedAt=new Date)}catch(r){await this.handleWorkflowError(t,s,r)}}}async executeSteps(e,t){var s,i;for(const a of e){const r=this.agents.get(t.assignedAgents[0]);if(r)try{const o={id:`call-${Date.now()}`,type:"function",function:{name:a.toolName,arguments:JSON.stringify({...a.parameters,...this.resolveParameters(a.parameters,t.context)})}},l=await r.executeToolsWithContext([o]);if((s=l[0])!=null&&s.success)t.results[a.id]=l[0].result,t.context={...t.context,...l[0].result};else throw new Error(((i=l[0])==null?void 0:i.error)||"Tool execution failed")}catch(o){throw new Error(`Step ${a.id} failed: ${o instanceof Error?o.message:"Unknown error"}`)}}}async executeParallelSteps(e,t){const s=e.steps.map(async a=>{t.parallelTasks.set(a.id,"running");try{await this.executeSteps([a],t),t.parallelTasks.set(a.id,"completed")}catch(r){throw t.parallelTasks.set(a.id,"failed"),r}}),i=e.timeout||3e5;await Promise.race([Promise.all(s),new Promise((a,r)=>setTimeout(()=>r(new Error("Parallel execution timeout")),i))])}async evaluateCondition(e,t){switch(e.type){case"user-preference":return this.evaluateUserPreference(e.expression,t,e.parameters);case"data-validation":return this.evaluateDataValidation(e.expression,t,e.parameters);case"business-rule":return this.evaluateBusinessRule(e.expression,t,e.parameters);case"external-api":return await this.evaluateExternalAPI(e.expression,t,e.parameters);default:return!0}}evaluateUserPreference(e,t,s){const i=t.userPreferences||{},[a,r,o]=e.split(" "),l=i[a];switch(r){case"==":return l===o;case"!=":return l!==o;case">":return Number(l)>Number(o);case"<":return Number(l)<Number(o);case"includes":return Array.isArray(l)&&l.includes(o);default:return!0}}evaluateDataValidation(e,t,s){try{return new Function("context","params",`return ${e}`)(t,s)}catch{return!1}}evaluateBusinessRule(e,t,s){var a;const i={budget_check:()=>(t.totalPrice||0)<=(s.maxBudget||1/0),availability_check:()=>t.availability===!0,time_constraint:()=>{const r=new Date,o=new Date(s.deadline);return r<o}};return((a=i[e])==null?void 0:a.call(i))||!0}async evaluateExternalAPI(e,t,s){try{return!0}catch{return!1}}resolveParameters(e,t){const s={};for(const[i,a]of Object.entries(e))if(typeof a=="string"&&a.startsWith("${")&&a.endsWith("}")){const r=a.slice(2,-1);s[i]=t[r]}else s[i]=a;return s}async handleWorkflowError(e,t,s){const i=e.currentStep,a=e.errorHistory.filter(r=>r.step===i).length;if(e.errorHistory.push({step:i,error:s.message,timestamp:new Date,retryCount:a}),a<t.failureHandling.retryPolicy.maxRetries){const r=this.calculateRetryDelay(a,t.failureHandling.retryPolicy);setTimeout(()=>{this.runWorkflow(e.id).catch(console.error)},r);return}t.failureHandling.rollbackSteps.length>0?(await this.rollbackWorkflow(e.id),e.status="rolled-back"):e.status="failed",e.completedAt=new Date,t.failureHandling.alternativeChain&&await this.executeWorkflow(t.failureHandling.alternativeChain,e.context,e.assignedAgents)}calculateRetryDelay(e,t){switch(t.backoffStrategy){case"linear":return t.baseDelay*(e+1);case"exponential":return t.baseDelay*Math.pow(2,e);default:return t.baseDelay}}async rollbackWorkflow(e){const t=this.executions.get(e),s=t?this.templates.get(t.templateId):void 0;if(!t||!s)return;const i=s.failureHandling.rollbackSteps.reverse();for(const a of i){const r=this.agents.get(t.assignedAgents[0]);if(r)try{const o={id:`rollback-${Date.now()}`,type:"function",function:{name:"rollback_action",arguments:JSON.stringify({stepId:a,context:t.context})}};await r.executeToolsWithContext([o])}catch(o){console.error(`Rollback failed for step ${a}:`,o)}}}initializeDefaultTemplates(){this.registerTemplate({id:"comprehensive-travel-booking",name:"Comprehensive Travel Booking",description:"End-to-end travel booking with flights, hotels, and activities",category:"travel-booking",steps:[{id:"analyze-requirements",toolName:"analyze_travel_requirements",parameters:{destination:"${destination}",dates:"${dates}",budget:"${budget}",preferences:"${userPreferences}"},description:"Analyze user travel requirements"},{id:"search-flights",toolName:"search_flights",parameters:{origin:"${origin}",destination:"${destination}",dates:"${dates}",passengers:"${passengers}"},description:"Search for available flights",condition:{type:"user-preference",expression:"includeFlights == true",parameters:{}}},{id:"search-hotels",toolName:"search_hotels",parameters:{destination:"${destination}",checkIn:"${checkIn}",checkOut:"${checkOut}",guests:"${guests}"},description:"Search for available hotels"},{id:"validate-budget",toolName:"validate_total_cost",parameters:{flightCost:"${flightResults.totalPrice}",hotelCost:"${hotelResults.totalPrice}",maxBudget:"${budget}"},description:"Validate total cost against budget",condition:{type:"business-rule",expression:"budget_check",parameters:{maxBudget:"${budget}"}},branches:{true:[],false:[{id:"suggest-alternatives",toolName:"suggest_budget_alternatives",parameters:{currentTotal:"${totalCost}",targetBudget:"${budget}"},description:"Suggest budget-friendly alternatives"}]}}],parallelExecutions:[{id:"parallel-search",steps:[{id:"search-activities",toolName:"search_activities",parameters:{destination:"${destination}",dates:"${dates}",interests:"${userPreferences.interests}"},description:"Search for activities and tours"},{id:"check-weather",toolName:"get_weather_forecast",parameters:{destination:"${destination}",dates:"${dates}"},description:"Get weather forecast for destination"}],syncPoint:"validate-budget",timeout:3e4}],failureHandling:{retryPolicy:{maxRetries:3,backoffStrategy:"exponential",baseDelay:1e3},rollbackSteps:[],alternativeChain:"simple-travel-booking"},metadata:{estimatedDuration:15,requiredAgentTypes:["travel-expert","booking-specialist"],complexity:"complex",tags:["booking","flights","hotels","activities"]}}),this.registerTemplate({id:"customer-support-resolution",name:"Customer Support Issue Resolution",description:"Systematic approach to resolving customer support issues",category:"customer-service",steps:[{id:"categorize-issue",toolName:"categorize_support_issue",parameters:{description:"${issueDescription}",urgency:"${urgency}"},description:"Categorize and prioritize the support issue"},{id:"gather-context",toolName:"gather_user_context",parameters:{userId:"${userId}",bookingHistory:!0,preferences:!0},description:"Gather relevant user context and history"},{id:"attempt-resolution",toolName:"attempt_automatic_resolution",parameters:{issueCategory:"${issueCategory}",userContext:"${userContext}"},description:"Attempt automatic resolution",condition:{type:"business-rule",expression:'context.issueCategory !== "complex"',parameters:{}},branches:{true:[],false:[{id:"escalate-to-human",toolName:"escalate_to_human_agent",parameters:{issue:"${issueDescription}",context:"${userContext}",priority:"high"},description:"Escalate complex issues to human agents"}]}}],parallelExecutions:[],failureHandling:{retryPolicy:{maxRetries:2,backoffStrategy:"linear",baseDelay:2e3},rollbackSteps:[],alternativeChain:"human-handoff"},metadata:{estimatedDuration:10,requiredAgentTypes:["customer-service"],complexity:"medium",tags:["support","resolution","escalation"]}})}}function z(){const[n]=p.useState(()=>new q),[e]=p.useState(()=>new H),[t,s]=p.useState(!1),{toast:i}=I();return p.useEffect(()=>{s(!0),i({title:"Agent Orchestration Initialized",description:"Multi-agent coordination system is ready"})},[i]),{agentOrchestrator:n,workflowOrchestrator:e,isInitialized:t,createAgent:n.createAgent.bind(n),terminateAgent:n.terminateAgent.bind(n),handoffToSpecialist:n.handoffToSpecialist.bind(n),executeWorkflow:e.executeWorkflow.bind(e),pauseWorkflow:e.pauseWorkflow.bind(e),cancelWorkflow:e.cancelWorkflow.bind(e),getSystemMetrics:n.getSystemMetrics.bind(n),getAvailableAgents:n.getAvailableAgents.bind(n)}}export{z as u};
