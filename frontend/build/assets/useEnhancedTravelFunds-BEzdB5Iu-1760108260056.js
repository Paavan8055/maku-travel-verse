import{g as F,h as C,r as s}from"./index-DRJveHKC-1760108260056.js";import{t as f}from"./travelFundClient-f-ChN1M3-1760108260056.js";const $=()=>{const{user:c}=F(),{toast:r}=C(),[d,l]=s.useState([]),[p,u]=s.useState(!0),[h,g]=s.useState(null),[y,m]=s.useState(null),a=s.useCallback(async()=>{if(!c){l([]),u(!1);return}try{u(!0);const{data:t,error:e}=await f.getUserFunds();if(e)throw e;l(t||[]);const n=await fetch("/api/travel-funds/integration-data",{headers:{Authorization:`Bearer ${c.id}`}});if(n.ok){const i=await n.json();g(i)}const o=await fetch("/api/travel-funds/enhanced-stats",{headers:{Authorization:`Bearer ${c.id}`}});if(o.ok){const i=await o.json();m(i)}}catch(t){console.error("Error fetching enhanced fund data:",t),r({title:"Error",description:"Failed to load enhanced fund data",variant:"destructive"})}finally{u(!1)}},[c,r]),k=s.useCallback(async t=>{var e;try{const n={name:`${t.dreamName} 2025`,description:`AI-generated savings plan for ${t.destination} adventure`,target_amount:t.estimatedCost,destination:t.destination,fund_type:t.companions>0?"group":"personal",deadline:((e=t.travelDates)==null?void 0:e.start.toISOString().split("T")[0])||new Date(Date.now()+31536e6).toISOString().split("T")[0],smart_dreams_integration:{source:"smart_dreams",dream_data:t,created_at:new Date().toISOString()}},o=await f.createFund(n);if(o.data)return r({title:"Dream fund created!",description:`Your ${t.destination} savings journey begins now`}),a(),o.data;throw new Error(o.error)}catch{return r({title:"Error",description:"Failed to create dream fund",variant:"destructive"}),null}},[r,a]),S=s.useCallback(async t=>{try{const e=t.fundAllocations.map(i=>fetch(`/api/travel-funds/${i.fundId}/bidding/lock`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({amount:i.amount,bid_id:t.dealId,lock_duration:t.lockDuration})}));if((await Promise.all(e)).every(i=>i.ok))return r({title:"Funds locked for bidding",description:`$${t.bidAmount} secured for your bid`}),a(),!0;throw new Error("Some fund locks failed")}catch{return r({title:"Error",description:"Failed to lock funds for bidding",variant:"destructive"}),!1}},[r,a]),v=s.useCallback(async(t,e,n)=>{try{(await fetch(`/api/travel-funds/bidding/${t}/${e?"process-win":"release-locks"}`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({final_price:n})})).ok&&(r({title:e?"Bid won!":"Bid unsuccessful",description:e?`Congratulations! Your bid of $${n} won the deal`:"Your funds have been released back to your account",variant:e?"default":"destructive"}),a())}catch(o){console.error("Error processing bid result:",o)}},[r,a]),b=s.useCallback(async(t,e)=>{try{const n=await fetch(`/api/travel-funds/${t}/nft/mint-milestone`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({milestone_type:e})});if(n.ok){const o=await n.json();return r({title:"NFT Minted!",description:`Your ${e} NFT has been added to your collection`}),o}}catch(n){console.error("Error minting NFT:",n)}return null},[r]),w=s.useCallback(async t=>{try{const e=await fetch("/api/travel-funds/checkout/suggestions",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)});if(e.ok)return await e.json()}catch(e){console.error("Error getting checkout suggestions:",e)}return[]},[]);return s.useEffect(()=>{a()},[a]),{funds:d,loading:p,integrationData:h,enhancedStats:y,createFundFromDream:k,lockFundsForBidding:S,processBidResult:v,mintMilestoneNFT:b,getCheckoutSuggestions:w,refetchData:a,totalFundBalance:d.reduce((t,e)=>t+e.balance,0),activeFundsCount:d.filter(t=>t.target_amount>t.balance).length}};export{$ as u};
